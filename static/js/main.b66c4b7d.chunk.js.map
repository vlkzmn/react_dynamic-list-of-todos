{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelectTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","query","onQueryChange","onSelectFilterMethod","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onCloseModal","useState","loading","setLoading","user","setUser","useEffect","userId","finally","href","email","name","App","setTodos","setSelectedTodo","filterMethod","setFilterMethod","setQuery","getFilteredTodos","filteredTodos","filter","toLowerCase","includes","amountOfTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b66c4b7d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              {\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye': !selectedTodo,\n                  'fa-eye-slash': selectedTodo,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  query: string;\n  onQueryChange: (query: string) => void;\n  onSelectFilterMethod: (method: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  onSelectFilterMethod,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => onSelectFilterMethod(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onQueryChange(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onQueryChange('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  onCloseModal: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onCloseModal }) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onCloseModal(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed && (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n\n              {!todo.completed && (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={user?.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterMethod, setFilterMethod] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  function getFilteredTodos() {\n    const filteredTodos = todos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n    switch (filterMethod) {\n      case 'active':\n        return filteredTodos.filter(todo => !todo.completed);\n\n      case 'completed':\n        return filteredTodos.filter(todo => todo.completed);\n\n      case 'all':\n        return filteredTodos;\n\n      default:\n        return filteredTodos;\n    }\n  }\n\n  const amountOfTodos = getFilteredTodos().length;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">\n              {`Total Todos: ${amountOfTodos}`}\n            </h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                onSelectFilterMethod={setFilterMethod}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {amountOfTodos > 0 && (\n                <TodoList\n                  todos={getFilteredTodos()}\n                  selectedTodo={selectedTodo}\n                  onSelectTodo={setSelectedTodo}\n                />\n              )}\n\n              {!loading && amountOfTodos === 0 && (\n                <p>No Todos matching your request</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onCloseModal={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}